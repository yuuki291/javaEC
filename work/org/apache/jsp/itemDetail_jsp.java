/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2021-03-18 02:13:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Iterator;
import javaweb.Item;
import javaweb.ItemDetailViewModel;

public final class itemDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("javaweb.Item");
    _jspx_imports_classes.add("javaweb.ItemDetailViewModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("   function setVisiblity(isVisible){\r\n");
      out.write("\r\n");
      out.write("\t   if(isVisible){\r\n");
      out.write("\t\t   document.getElementById('cart-container').style.display = \"block\";\r\n");
      out.write("\t   }else{\r\n");
      out.write("\t\t   document.getElementById('cart-container').style.display = \"none\";\r\n");
      out.write("\t   }\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(" *{\r\n");
      out.write("   box-sizing: border-box;\r\n");
      out.write("   padding: 0;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write(" .cart-container{\r\n");
      out.write("     height: 100%;\r\n");
      out.write("     width: 100%;\r\n");
      out.write("     background: rgba(0,0,0,0.5);\r\n");
      out.write("     position: absolute;\r\n");
      out.write("     top: 0;\r\n");
      out.write("     left: 0;\r\n");
      out.write("     padding: 1.5rem;\r\n");
      out.write("     display: none;\r\n");
      out.write("  }\r\n");
      out.write("  .shopping-cart{\r\n");
      out.write("     height: 100%;\r\n");
      out.write("     width: 100%;\r\n");
      out.write("     background: rgba(255,255,255,1.0);\r\n");
      out.write("     position: relative;\r\n");
      out.write("     top: 0;\r\n");
      out.write("     left: 0;\r\n");
      out.write("     padding: 1.0rem;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  table {\r\n");
      out.write("    width: 50%;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  thead tr {\r\n");
      out.write("       background-color: #80cfcf;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  td{\r\n");
      out.write("     border-bottom: 1px solid #000000;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <body onload=\"setVisiblity(");
      out.print( (Boolean)request.getAttribute("cartVisiblity") );
      out.write(")\">\r\n");
      out.write("       ");

        ItemDetailViewModel vm = (ItemDetailViewModel)request.getAttribute(ItemDetailViewModel.class.getSimpleName());
        Item item = vm.itemDetail();
       
      out.write("\r\n");
      out.write("\r\n");
      out.write("       <h1>");
      out.print( item.getProduct_Cd() );
      out.write("</h1>\r\n");
      out.write("       <img src = \"./img/");
      out.print( item.getProduct_Img());
      out.write("\">\r\n");
      out.write("       <h2>");
      out.print( item.getProduct_Nm() );
      out.write("</h2>\r\n");
      out.write("       <b>価格：");
      out.print( item.getUnit_Price() );
      out.write("円</b>\r\n");
      out.write("       <div style = \"margin:1.0rem 0;\">");
      out.print( item.getDescription() );
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("       <div class=\"cart-container\" id=\"cart-container\">\r\n");
      out.write("           <div class=\"shopping-cart\">\r\n");
      out.write("               <div style=\"height: 5%; font-weight: bold; font-size: 1.25rem;\">ショッピングカート</div>\r\n");
      out.write("               <div style=\"height: 90%; overflow-y: auto;\">\r\n");
      out.write("\r\n");
      out.write("                  <table>\r\n");
      out.write("                   <thead>\r\n");
      out.write("                      <tr>\r\n");
      out.write("                         <td>商品コード</td>\r\n");
      out.write("                         <td>商品名</td>\r\n");
      out.write("                         <td>単価</td>\r\n");
      out.write("                      </tr>\r\n");
      out.write("                   </thead>\r\n");
      out.write("\r\n");
      out.write("                   <tbody>\r\n");
      out.write("                    ");

                     Iterator<Item> iterator = vm.shoppingCart().iterator();
                     while(iterator.hasNext()){
                    	 Item currentItem = iterator.next();
                     
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                           <td>");
      out.print( currentItem.getProduct_Cd() );
      out.write("</td>\r\n");
      out.write("                           <td>");
      out.print( currentItem.getProduct_Nm() );
      out.write("</td>\r\n");
      out.write("                           <td>");
      out.print( currentItem.getUnit_Price() );
      out.write("</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                     ");

                       }
                     
      out.write("\r\n");
      out.write("\r\n");
      out.write("                   </tbody>\r\n");
      out.write("                  </table>\r\n");
      out.write("\r\n");
      out.write("           </div>\r\n");
      out.write("           <div style=\"height: 5%\">\r\n");
      out.write("               <button type=\"button\" onclick=\"setVisiblity(false)\">閉じる</button>\r\n");
      out.write("           </div>\r\n");
      out.write("         </div>\r\n");
      out.write("       </div>\r\n");
      out.write("\r\n");
      out.write("       <form method=\"post\" action=\"addItem\">\r\n");
      out.write("          <input type=\"hidden\" name=\"currentItemCd\" value=\"");
      out.print( item.getProduct_Cd() );
      out.write("\">\r\n");
      out.write("          <button style=\"margin: 10px 0\"type=\"submit\">この商品をカートに追加</button>\r\n");
      out.write("       </form>\r\n");
      out.write("       <a href = \"items.jsp\">Back</a>\r\n");
      out.write(" </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
